plugins {
    id 'io.jmix' version '1.7.+'
    id 'java'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = project.hasProperty("jmixVersion") ? jmixVersion : defaultJmixVersion
    projectId = 'cluster'
}

group = 'io.jmix.samples'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.jmix.io/repository/public'
    }
    maven {
        url = 'https://nexus.jmix.io/repository/premium'
        credentials {
            username = rootProject['premiumRepoUser']
            password = rootProject['premiumRepoPass']
        }
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-themes-compiled'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'
    implementation 'io.jmix.notifications:jmix-notifications-starter'
    implementation 'io.jmix.notifications:jmix-notifications-ui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.hazelcast:hazelcast'
    //implementation 'com.hazelcast:hazelcast:5.3.2'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation("io.jmix.cuba:jmix-cuba-starter")
    implementation("io.jmix.dynattr:jmix-dynattr-starter")
    implementation("io.jmix.dynattr:jmix-dynattr-ui-starter")
    implementation("org.postgresql:postgresql")

    implementation 'org.glassfish.main.external:jmxremote_optional-repackaged:5.0'

    implementation 'io.kubernetes:client-java:15.0.1'
    implementation 'io.kubernetes:client-java-api-fluent:15.0.1'
    implementation 'io.fabric8:kubernetes-client:6.0.0'//todo runtime
    implementation 'io.fabric8:kubernetes-client-api:6.0.0'//todo compile

    implementation 'org.assertj:assertj-core:3.23.1'
}

test {
    useJUnitPlatform()
    systemProperty 'testBeanName', System.getProperty('testBeanName')
}

bootBuildImage {
    println "Jmix verison: ${project.hasProperty("jmixVersion") ? jmixVersion : defaultJmixVersion + ' (default)'}"
    imageName = 'docker.haulmont.com/platform/jmix-kube-tests/sample-cluster:jmix_1_x'
}